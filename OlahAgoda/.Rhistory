4+5
q()
q()
library("askpass", lib.loc="C:/Users/A455L/anaconda3/envs/rstudio/lib/R/library")
detach("package:askpass", unload=TRUE)
install.packages("palmerpenguins")
library(palmerpenguins)
summary(palmerpenguins)
summary(penguins)
View(penguins)
library(lubridate)
install.packages("lubridate")
library(tidyverse)
install.packages("tidyverse")
install.packages("tidyverse")
install.packages("tidyverse")
library(tidyverse)
print("coding in R")
?print()
x <- c(1, 2, 3)
print(x)
names(x) <- c("a","b","c")
print(x)
list("a", 1L, 1.5, TRUE)
y <- list("a", 1L, 1.5, TRUE)
print(y)
str(y)
list('Chicago' = 1, 'New York' = 2, 'Los Angeles' = 3)
$New York
$'New York'
$`New York`
z <- list('Chicago' = 1, 'New York' = 2, 'Los Angeles' = 3)
print(z)
print(z(Chicago))
print(z('Chicago'))
print(z['Chicago'])
today()
library(tidyverse)
library(tidyverse)
install.packages("tidyverse")
library(tidyverse)
library(lubridate)
library(tidyverse)
today()
now()
data.frame(x = c(1, 2, 3) , y = c(1.5, 5.5, 7.5))
q()
'q()'
q()
'q()'
installed.packages()
library(tidyverse)
library(tidyverse)
library(ggplot2)
install.packages(gglot2)
install.packages("ggplot2")
library(ggplot2)
library(ggplot2)
install.packages("devtools")
library(devtools)
library(lubridate)
devtools::install_github("tidyverse/tidyverse")
devtools::install_github("tidyverse/tidyverse")
devtools::install_github("tidyverse/tidyverse")
library(ggplot2)
#Atur penyimpanan lokal selama program berlangsung
setwd("F:/Softskills/Linkedin/Portofolio/Skripsi/OlahAgoda")
#Import data tanggapan aplikasi agoda
data.agoda <- read.csv("agoda_rev.csv", stringsAsFactors = FALSE,
encoding = 'UTF-16')
#Ubah nama kolom
names(data.agoda) <- c("nama", "peringkat", "tanggapan", "tanggal")
#Hapus kolom peringkat
data1.agoda <- data.agoda[, -c(2)]
#Import data tanggapan menggunakan readLines
agoda.rL <- readLines("data1agoda_tanggapan.csv")
#Ubah data tanggapan menjadi koleksi dokumen
agoda.corpus <- Corpus(VectorSource(agoda.rL))
library(tm)
library(tm)
library(textclean)
library(stringr)
library(plyr)
library(tokenizers)
library(e1071)
library(gmodels)
library(caret)
library(wordcloud)
library(devtools)
library(katadasaR)
#Ubah data tanggapan menjadi koleksi dokumen
agoda.corpus <- Corpus(VectorSource(agoda.rL))
#DATA TANGGAPAN APLIKASI AGODA
#1. STRUKTURISASI DATA ====
#A. CLEANING TEXT
#Membuat fungsi untuk menghilangan tanda /,@,\\|
toSpace <- content_transformer(function (x , pattern ) gsub(pattern, " ", x))
clean1.agoda <- tm_map(agoda.corpus, toSpace, "/")
clean2.agoda <- tm_map(clean1.agoda, toSpace, "@")
clean3.agoda <- tm_map(clean2.agoda, toSpace, "\\|")
#Mengubah karakter huruf kecil
clean11.agoda <- tm_map(clean3.agoda, content_transformer(tolower))
#Menghilangkan punctuation atau tanda hubung
clean12.agoda <- tm_map(clean11.agoda, toSpace, "[[:punct:]]")
#Menghilangkan digit atau penomoran angka
clean13.agoda <- tm_map(clean12.agoda, toSpace, "[[:digit:]]")
#
#Membuat fungsi untuk menghilangkan karakter emoji
remove.emoticon <- function (x) gsub("[^\x01-\x7F]", "", x)
clean21.agoda <- tm_map(clean13.agoda, remove.emoticon)
#Membuat fungsi untuk menghilangkan karakter kode
remove.code <- function (x) gsub("<\\S+","",x)
clean22.agoda <- tm_map(clean21.agoda, remove.code)
#
#Membuat fungsi untuk menghilangkan karakter char atau penulisan yang berulang
remove.char <- function (x) gsub("([[:alpha:]])\\1{2,}", "\\1",x)
clean31.agoda<- tm_map(clean22.agoda, remove.char)
#Menghilangkan jarak antar kata
clean32.agoda <- tm_map(clean31.agoda, stripWhitespace)
#Membuat fungsi untuk menghilangkan karakter alamat situs
removeURL <- function(x) gsub("http[[:alnum:]]*", " ", x)
clean33.agoda <- tm_map(clean32.agoda, removeURL)
#
#ubah data menjadi dataframe
df.clean.agoda <- data.frame(text=unlist(sapply(clean33.agoda, `[`)),
stringsAsFactors=F)
View(df.clean.agoda)
#B. NORMALISASI DATA
#Import kamus kata normalisasi
lexiconindo <- read.csv("slangwords.csv")
View(lexiconindo)
tail(lexiconindo)
#proses normalisasi
slang.agoda <- replace_internet_slang(df.clean.agoda$text,
slang = paste0("\\b", lexiconindo$slang, "\\b"),
replacement = lexiconindo$formal,
ignore.case = TRUE)
View(lexiconindo)
View(lexiconindo)
View(lexiconindo$formal)
View(data.frame(lexiconindo))
View(data.frame(lexiconindo$formal))
View(df.clean.agoda)
head(df.clean.agoda)
head(df.clean.agoda$text)
head(data.frame(lexiconindo$formal))
head(data.frame(lexiconindo))
slang.agoda <- replace_internet_slang(df.clean.agoda$text,
slang = paste0("\\b",
lexiconindo$slang, "\\b"),
replacement = lexiconindo$formal,
ignore.case = TRUE)
lexiconindo_df <- data.frame(lexiconindo$formal)
View(lexiconindo)
View(lexiconindo_df)
lexiconindo_df$lexiconindo.formal
lexiconindo_df
View(lexiconindo)
View(lexiconindo_df)
lexiconindo_df <- data.frame(slang = lexiconindo$slang, formal = lexiconindo$formal)
str(lexiconindo_df)
slang.agoda <- replace_internet_slang(df.clean.agoda$text,
slang = paste0("\\b",
lexiconindo_df$slang, "\\b"),
replacement = lexiconindo_df$formal,
ignore.case = TRUE)
load("F:/Softskills/Linkedin/Portofolio/Skripsi/OlahAgoda/listcode_olahagoda4.RData")
View(slang.agoda)
#Membuat model klasifikasi data latih
system.time(classifier<-naiveBayes(trainNB1, agodalab.train$class,
laplace = 1))
#Prediksi label data uji
system.time(pred<-predict(classifier, newdata=testNB1))
CrossTable(pred, agodalab.test$class,
prop.chisq = FALSE,
prop.t = FALSE,
dnn = c('Predicted', 'Actual'))
barplot(d.agodatest[1:9,]$freq, las = 2,
names.arg = d.agodatest[1:9,]$word,
col = "cyan", main = "Percobaan Satu Aplikasi Agoda",
ylab = "Jumlah kata")
wordcloud(words = d.agodatest$word, freq = d.agodatest$freq,
min.freq = 1, max.words = 250, random.order = FALSE,
rot.per = 0.65, colors = brewer.pal(8, "Dark2"))
as.list(findAssocs(tdm.agodatest1,
terms = c("hotel", "bayar", "aplikasi", "pesan",
"batal", "uang", "murah", "harga", "mudah",
"bagus"),
corlimit = c(0.25, 0.25, 0.25, 0.25, 0.25,
0.25, 0.1, 0.1, 0.1, 0.1)))
knitr::opts_chunk$set(echo = TRUE)
summary(cars)
